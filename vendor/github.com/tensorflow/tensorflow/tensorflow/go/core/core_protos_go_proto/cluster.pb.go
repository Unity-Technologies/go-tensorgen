// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tensorflow/core/protobuf/cluster.proto

package core_protos_go_proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Defines a single job in a TensorFlow cluster.
type JobDef struct {
	// The name of this job.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Mapping from task ID to "hostname:port" string.
	//
	// If the `name` field contains "worker", and the `tasks` map contains a
	// mapping from 7 to "example.org:2222", then the device prefix
	// "/job:worker/task:7" will be assigned to "example.org:2222".
	Tasks                map[int32]string `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *JobDef) Reset()         { *m = JobDef{} }
func (m *JobDef) String() string { return proto.CompactTextString(m) }
func (*JobDef) ProtoMessage()    {}
func (*JobDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ea47a9615190cff, []int{0}
}

func (m *JobDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobDef.Unmarshal(m, b)
}
func (m *JobDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobDef.Marshal(b, m, deterministic)
}
func (m *JobDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobDef.Merge(m, src)
}
func (m *JobDef) XXX_Size() int {
	return xxx_messageInfo_JobDef.Size(m)
}
func (m *JobDef) XXX_DiscardUnknown() {
	xxx_messageInfo_JobDef.DiscardUnknown(m)
}

var xxx_messageInfo_JobDef proto.InternalMessageInfo

func (m *JobDef) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *JobDef) GetTasks() map[int32]string {
	if m != nil {
		return m.Tasks
	}
	return nil
}

// Defines a TensorFlow cluster as a set of jobs.
type ClusterDef struct {
	// The jobs that comprise the cluster.
	Job                  []*JobDef `protobuf:"bytes,1,rep,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ClusterDef) Reset()         { *m = ClusterDef{} }
func (m *ClusterDef) String() string { return proto.CompactTextString(m) }
func (*ClusterDef) ProtoMessage()    {}
func (*ClusterDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ea47a9615190cff, []int{1}
}

func (m *ClusterDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterDef.Unmarshal(m, b)
}
func (m *ClusterDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterDef.Marshal(b, m, deterministic)
}
func (m *ClusterDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterDef.Merge(m, src)
}
func (m *ClusterDef) XXX_Size() int {
	return xxx_messageInfo_ClusterDef.Size(m)
}
func (m *ClusterDef) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterDef.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterDef proto.InternalMessageInfo

func (m *ClusterDef) GetJob() []*JobDef {
	if m != nil {
		return m.Job
	}
	return nil
}

func init() {
	proto.RegisterType((*JobDef)(nil), "tensorflow.JobDef")
	proto.RegisterMapType((map[int32]string)(nil), "tensorflow.JobDef.TasksEntry")
	proto.RegisterType((*ClusterDef)(nil), "tensorflow.ClusterDef")
}

func init() {
	proto.RegisterFile("tensorflow/core/protobuf/cluster.proto", fileDescriptor_8ea47a9615190cff)
}

var fileDescriptor_8ea47a9615190cff = []byte{
	// 260 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0xd9, 0xc4, 0x14, 0x1c, 0x11, 0x64, 0xf1, 0x10, 0x0a, 0x42, 0x29, 0x22, 0x3d, 0x6d,
	0xa0, 0xbd, 0x14, 0x8f, 0x55, 0x41, 0x3c, 0x95, 0xe0, 0xc9, 0x4b, 0xc9, 0xc6, 0x4d, 0x8c, 0x4d,
	0x32, 0xb2, 0x3b, 0xab, 0xd4, 0xbf, 0xe0, 0x1f, 0xf6, 0x28, 0xbb, 0x2b, 0x24, 0xa0, 0x97, 0xf0,
	0x65, 0xde, 0xcc, 0xbc, 0xd9, 0x07, 0x57, 0xa4, 0x7a, 0x83, 0xba, 0x6a, 0xf1, 0x23, 0x2b, 0x51,
	0xab, 0xec, 0x4d, 0x23, 0xa1, 0xb4, 0x55, 0x56, 0xb6, 0xd6, 0x90, 0xd2, 0xc2, 0x17, 0x38, 0x0c,
	0x7d, 0xf3, 0x2f, 0x06, 0x93, 0x07, 0x94, 0xb7, 0xaa, 0xe2, 0x1c, 0x8e, 0xfa, 0xa2, 0x53, 0x29,
	0x9b, 0xb1, 0xc5, 0x71, 0xee, 0x99, 0xaf, 0x20, 0xa1, 0xc2, 0xec, 0x4d, 0x1a, 0xcd, 0xe2, 0xc5,
	0xc9, 0xf2, 0x42, 0x0c, 0xa3, 0x22, 0x8c, 0x89, 0x47, 0xa7, 0xdf, 0xf5, 0xa4, 0x0f, 0x79, 0xe8,
	0x9d, 0xae, 0x01, 0x86, 0x22, 0x3f, 0x83, 0x78, 0xaf, 0x0e, 0x7e, 0x6b, 0x92, 0x3b, 0xe4, 0xe7,
	0x90, 0xbc, 0x17, 0xad, 0x55, 0x69, 0xe4, 0x9d, 0xc2, 0xcf, 0x75, 0xb4, 0x66, 0xf3, 0x25, 0xc0,
	0x4d, 0x38, 0xd5, 0x1d, 0x74, 0x09, 0xf1, 0x2b, 0xca, 0x94, 0x79, 0x6b, 0xfe, 0xd7, 0x3a, 0x77,
	0xf2, 0xe6, 0x13, 0xa6, 0xa8, 0xeb, 0xb1, 0xfa, 0xdc, 0x18, 0xd2, 0xb6, 0xa7, 0xa6, 0x53, 0x9b,
	0xd3, 0xdf, 0x7d, 0x5b, 0xf7, 0x72, 0xb3, 0x65, 0x4f, 0xf7, 0x75, 0x43, 0x2f, 0x56, 0x8a, 0x12,
	0xbb, 0x6c, 0x94, 0xd7, 0xff, 0x58, 0x63, 0x08, 0xd2, 0x7d, 0x76, 0x3e, 0x3c, 0xb3, 0xab, 0x31,
	0xd0, 0x37, 0x63, 0x72, 0xe2, 0x69, 0xf5, 0x13, 0x00, 0x00, 0xff, 0xff, 0x01, 0x1e, 0x5b, 0x3f,
	0x7a, 0x01, 0x00, 0x00,
}
